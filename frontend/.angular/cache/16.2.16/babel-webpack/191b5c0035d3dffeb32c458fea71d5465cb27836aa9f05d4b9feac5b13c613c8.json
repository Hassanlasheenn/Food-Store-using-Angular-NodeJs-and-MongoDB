{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/user.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(_userService, _router) {\n    this._userService = _userService;\n    this._router = _router;\n  }\n  canActivate(route, state) {\n    // return this._userService.getUser.pipe(\n    //   map((user: User) => {\n    //     if(this._userService.currentUser) {\n    //       return true;\n    //     } else {\n    //       this._router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\n    //       return false;\n    //     }\n    //   })\n    // );\n    if (this._userService.currentUser.token) return true;\n    this._router.navigate(['/login'], {\n      queryParams: {\n        returnUrl: state.url\n      }\n    });\n    return false;\n  }\n  static {\n    this.ɵfac = function AuthGuard_Factory(t) {\n      return new (t || AuthGuard)(i0.ɵɵinject(i1.UserService), i0.ɵɵinject(i2.Router));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthGuard,\n      factory: AuthGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AuthGuard","constructor","_userService","_router","canActivate","route","state","currentUser","token","navigate","queryParams","returnUrl","url","i0","ɵɵinject","i1","UserService","i2","Router","factory","ɵfac","providedIn"],"sources":["/Users/hazemalaa/Desktop/Food-Store-using-Angular-NodeJs-and-MongoDB/frontend/src/app/auth/guards/auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserService } from 'src/app/services/user.service';\nimport { map } from 'rxjs/operators';\nimport { User } from '../../shared/models/User';\nimport { state } from '@angular/animations';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private _userService: UserService,\n    private _router: Router\n  ) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    // return this._userService.getUser.pipe(\n    //   map((user: User) => {\n    //     if(this._userService.currentUser) {\n    //       return true;\n    //     } else {\n    //       this._router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\n    //       return false;\n    //     }\n    //   })\n    // );\n    if(this._userService.currentUser.token) return true;\n\n    this._router.navigate(['/login'], {queryParams:{returnUrl: state.url}})\n    return false;\n  }\n}\n"],"mappings":";;;AAWA,OAAM,MAAOA,SAAS;EACpBC,YACUC,YAAyB,EACzBC,OAAe;IADf,KAAAD,YAAY,GAAZA,YAAY;IACZ,KAAAC,OAAO,GAAPA,OAAO;EACd;EAEHC,WAAWA,CACTC,KAA6B,EAC7BC,KAA0B;IAE1B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAG,IAAI,CAACJ,YAAY,CAACK,WAAW,CAACC,KAAK,EAAE,OAAO,IAAI;IAEnD,IAAI,CAACL,OAAO,CAACM,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE;MAACC,WAAW,EAAC;QAACC,SAAS,EAAEL,KAAK,CAACM;MAAG;IAAC,CAAC,CAAC;IACvE,OAAO,KAAK;EACd;;;uBAxBWZ,SAAS,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;IAAA;EAAA;;;aAATlB,SAAS;MAAAmB,OAAA,EAATnB,SAAS,CAAAoB,IAAA;MAAAC,UAAA,EAFR;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}