{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { Order } from 'src/app/shared/models/Order';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/cart.service\";\nimport * as i2 from \"src/app/services/user.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../../components/title/title.component\";\nexport class CheckoutPageComponent {\n  get fc() {\n    return this.checkoutForm.controls;\n  }\n  constructor(_cartService, _userService, _fb) {\n    this._cartService = _cartService;\n    this._userService = _userService;\n    this._fb = _fb;\n    this.order = new Order();\n    this.getCart();\n  }\n  ngOnInit() {\n    this.initForm();\n  }\n  initForm() {\n    let {\n      name,\n      address\n    } = this._userService.currentUser;\n    this.checkoutForm = this._fb.group({\n      name: [name, Validators.required],\n      address: [address, Validators.required]\n    });\n  }\n  createOrder() {\n    if (this.checkoutForm?.invalid) {\n      console.log('form is invalid');\n      return;\n    }\n    this.order.name = this.fc.name.value;\n    this.order.address = this.fc.address.value;\n    console.log(this.order);\n  }\n  getCart() {\n    const cart = this._cartService.getCart();\n    this.order.items = cart.items;\n    this.order.totalPrice = cart.totalPrice;\n  }\n  static {\n    this.ɵfac = function CheckoutPageComponent_Factory(t) {\n      return new (t || CheckoutPageComponent)(i0.ɵɵdirectiveInject(i1.CartService), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CheckoutPageComponent,\n      selectors: [[\"app-checkout-page\"]],\n      decls: 6,\n      vars: 3,\n      consts: [[1, \"container\"], [1, \"content\"], [\"title\", \"Order Form\"], [3, \"formGroup\"], [\"label\", \"Name\", 3, \"formControlName\"], [\"label\", \"Address\", 3, \"formControlName\"]],\n      template: function CheckoutPageComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n          i0.ɵɵelement(2, \"app-title\", 2);\n          i0.ɵɵelementStart(3, \"form\", 3);\n          i0.ɵɵelement(4, \"input\", 4)(5, \"input\", 5);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.checkoutForm);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formControlName\", ctx.fc.name);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formControlName\", ctx.fc.address);\n        }\n      },\n      dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i4.TitleComponent],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","Order","CheckoutPageComponent","fc","checkoutForm","controls","constructor","_cartService","_userService","_fb","order","getCart","ngOnInit","initForm","name","address","currentUser","group","required","createOrder","invalid","console","log","value","cart","items","totalPrice","i0","ɵɵdirectiveInject","i1","CartService","i2","UserService","i3","FormBuilder","selectors","decls","vars","consts","template","CheckoutPageComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty"],"sources":["/Users/hazemalaa/Desktop/Food-Store-using-Angular-NodeJs-and-MongoDB/frontend/src/app/pages/checkout-page/checkout-page.component.ts","/Users/hazemalaa/Desktop/Food-Store-using-Angular-NodeJs-and-MongoDB/frontend/src/app/pages/checkout-page/checkout-page.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CartService } from 'src/app/services/cart.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { Order } from 'src/app/shared/models/Order';\n\n@Component({\n  selector: 'app-checkout-page',\n  templateUrl: './checkout-page.component.html',\n  styleUrls: ['./checkout-page.component.scss']\n})\nexport class CheckoutPageComponent implements OnInit {\n  order: Order = new Order();\n  checkoutForm!: FormGroup;\n\n  get fc() {\n    return this.checkoutForm.controls;\n  }\n\n  constructor(\n    private _cartService: CartService,\n    private _userService: UserService,\n    private _fb: FormBuilder,\n  ) {\n    this.getCart();\n  }\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  initForm(): void {\n    let { name, address } = this._userService.currentUser;\n\n    this.checkoutForm = this._fb.group({\n      name: [name, Validators.required],\n      address: [address, Validators.required]\n    });\n  }\n\n  createOrder(): void {\n    if(this.checkoutForm?.invalid) {\n      console.log('form is invalid');\n      return;\n    }\n    \n    this.order.name = this.fc.name.value;\n    this.order.address = this.fc.address.value;\n\n    console.log(this.order);\n  }\n\n  \n  getCart(): void {\n    const cart = this._cartService.getCart();\n    this.order.items = cart.items;\n    this.order.totalPrice = cart.totalPrice;\n  }\n}\n","<div class=\"container\">\n    <div class=\"content\">\n        <app-title title=\"Order Form\"></app-title>\n\n        <form [formGroup]=\"checkoutForm\">\n            <input [formControlName]=\"fc.name\" label=\"Name\" />\n            <input [formControlName]=\"fc.address\" label=\"Address\" />\n        </form>\n    </div>\n</div>"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;AAGnE,SAASC,KAAK,QAAQ,6BAA6B;;;;;;AAOnD,OAAM,MAAOC,qBAAqB;EAIhC,IAAIC,EAAEA,CAAA;IACJ,OAAO,IAAI,CAACC,YAAY,CAACC,QAAQ;EACnC;EAEAC,YACUC,YAAyB,EACzBC,YAAyB,EACzBC,GAAgB;IAFhB,KAAAF,YAAY,GAAZA,YAAY;IACZ,KAAAC,YAAY,GAAZA,YAAY;IACZ,KAAAC,GAAG,GAAHA,GAAG;IAVb,KAAAC,KAAK,GAAU,IAAIT,KAAK,EAAE;IAYxB,IAAI,CAACU,OAAO,EAAE;EAChB;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACC,QAAQ,EAAE;EACjB;EAEAA,QAAQA,CAAA;IACN,IAAI;MAAEC,IAAI;MAAEC;IAAO,CAAE,GAAG,IAAI,CAACP,YAAY,CAACQ,WAAW;IAErD,IAAI,CAACZ,YAAY,GAAG,IAAI,CAACK,GAAG,CAACQ,KAAK,CAAC;MACjCH,IAAI,EAAE,CAACA,IAAI,EAAEd,UAAU,CAACkB,QAAQ,CAAC;MACjCH,OAAO,EAAE,CAACA,OAAO,EAAEf,UAAU,CAACkB,QAAQ;KACvC,CAAC;EACJ;EAEAC,WAAWA,CAAA;IACT,IAAG,IAAI,CAACf,YAAY,EAAEgB,OAAO,EAAE;MAC7BC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;MAC9B;;IAGF,IAAI,CAACZ,KAAK,CAACI,IAAI,GAAG,IAAI,CAACX,EAAE,CAACW,IAAI,CAACS,KAAK;IACpC,IAAI,CAACb,KAAK,CAACK,OAAO,GAAG,IAAI,CAACZ,EAAE,CAACY,OAAO,CAACQ,KAAK;IAE1CF,OAAO,CAACC,GAAG,CAAC,IAAI,CAACZ,KAAK,CAAC;EACzB;EAGAC,OAAOA,CAAA;IACL,MAAMa,IAAI,GAAG,IAAI,CAACjB,YAAY,CAACI,OAAO,EAAE;IACxC,IAAI,CAACD,KAAK,CAACe,KAAK,GAAGD,IAAI,CAACC,KAAK;IAC7B,IAAI,CAACf,KAAK,CAACgB,UAAU,GAAGF,IAAI,CAACE,UAAU;EACzC;;;uBA9CWxB,qBAAqB,EAAAyB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,WAAA;IAAA;EAAA;;;YAArBhC,qBAAqB;MAAAiC,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,+BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCXlCd,EAAA,CAAAgB,cAAA,aAAuB;UAEfhB,EAAA,CAAAiB,SAAA,mBAA0C;UAE1CjB,EAAA,CAAAgB,cAAA,cAAiC;UAC7BhB,EAAA,CAAAiB,SAAA,eAAkD;UAEtDjB,EAAA,CAAAkB,YAAA,EAAO;;;UAHDlB,EAAA,CAAAmB,SAAA,GAA0B;UAA1BnB,EAAA,CAAAoB,UAAA,cAAAL,GAAA,CAAAtC,YAAA,CAA0B;UACrBuB,EAAA,CAAAmB,SAAA,GAA2B;UAA3BnB,EAAA,CAAAoB,UAAA,oBAAAL,GAAA,CAAAvC,EAAA,CAAAW,IAAA,CAA2B;UAC3Ba,EAAA,CAAAmB,SAAA,GAA8B;UAA9BnB,EAAA,CAAAoB,UAAA,oBAAAL,GAAA,CAAAvC,EAAA,CAAAY,OAAA,CAA8B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}