{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/order.service\";\nimport * as i2 from \"src/app/services/cart.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ngx-toastr\";\nconst _c0 = [\"paypal\"];\nexport let PaypalButtonComponent = /*#__PURE__*/(() => {\n  class PaypalButtonComponent {\n    constructor(_orderService, _cartService, _router, _toastrService) {\n      this._orderService = _orderService;\n      this._cartService = _cartService;\n      this._router = _router;\n      this._toastrService = _toastrService;\n      this._destroy$ = new Subject();\n    }\n    ngOnInit() {\n      this.onPaypalPay();\n    }\n    onPaypalPay() {\n      const self = this;\n      paypal.Buttons({\n        style: {\n          layout: 'horizontal',\n          color: 'blue',\n          shape: 'rect',\n          label: 'paypal'\n        },\n        createOrder: (data, actions) => {\n          return actions.order.create({\n            purchase_units: [{\n              amount: {\n                currency_code: 'USD',\n                value: self.order.totalPrice\n              }\n            }]\n          });\n        },\n        onApprove: (data, actions) => {\n          const payment = actions.order.capture();\n          this.order.paymentId = payment.id;\n          self._orderService.pay(this.order).subscribe({\n            next: orderId => {\n              this._cartService.clearCart();\n              this._router.navigateByUrl('/track/' + orderId);\n              this._toastrService.success('Payment done successfully', 'Success');\n            },\n            error: err => {\n              this._toastrService.error('Payment Failed', 'Error');\n            }\n          });\n        },\n        onError: err => {\n          this._toastrService.error('Payment Failed', 'Error');\n          console.log(err);\n        }\n      }).render(this.paypalElement.nativeElement);\n    }\n    ngOnDestroy() {\n      this._destroy$.next();\n      this._destroy$.complete();\n    }\n    static {\n      this.ɵfac = function PaypalButtonComponent_Factory(t) {\n        return new (t || PaypalButtonComponent)(i0.ɵɵdirectiveInject(i1.OrderService), i0.ɵɵdirectiveInject(i2.CartService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.ToastrService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: PaypalButtonComponent,\n        selectors: [[\"paypal-button\"]],\n        viewQuery: function PaypalButtonComponent_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 7);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paypalElement = _t.first);\n          }\n        },\n        inputs: {\n          order: \"order\"\n        },\n        decls: 2,\n        vars: 0,\n        consts: [[\"paypal\", \"\"]],\n        template: function PaypalButtonComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelement(0, \"div\", null, 0);\n          }\n        }\n      });\n    }\n  }\n  return PaypalButtonComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}