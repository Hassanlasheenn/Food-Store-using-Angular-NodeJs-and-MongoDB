{"ast":null,"code":"import { Subject, takeUntil } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/loading.service\";\nimport * as i2 from \"@angular/common\";\nfunction LoadingComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2);\n    i0.ɵɵelement(3, \"img\", 3);\n    i0.ɵɵelementStart(4, \"h1\", 4);\n    i0.ɵɵtext(5, \"Loading...\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"src\", ctx_r0.loadingImage, i0.ɵɵsanitizeUrl);\n  }\n}\nexport class LoadingComponent {\n  constructor(_loadingService) {\n    this._loadingService = _loadingService;\n    this._destroy$ = new Subject();\n    this.loadingImage = '/assets/images/loading.svg';\n  }\n  ngOnInit() {\n    this.onLoading();\n  }\n  onLoading() {\n    this._loadingService.isLoading.pipe(takeUntil(this._destroy$)).subscribe(value => {\n      this.isLoading = true;\n    });\n  }\n  ngOnDestroy() {\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n  static {\n    this.ɵfac = function LoadingComponent_Factory(t) {\n      return new (t || LoadingComponent)(i0.ɵɵdirectiveInject(i1.LoadingService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoadingComponent,\n      selectors: [[\"app-loading\"]],\n      decls: 1,\n      vars: 1,\n      consts: [[4, \"ngIf\"], [1, \"container\"], [1, \"container__details\"], [\"alt\", \"loading circle\", 3, \"src\"], [1, \"container__details__text\"]],\n      template: function LoadingComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, LoadingComponent_ng_container_0_Template, 6, 1, \"ng-container\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        }\n      },\n      dependencies: [i2.NgIf],\n      styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n\\n \\tvar __webpack_modules__ = ({\\n\\n\\n 375:\\n\\n\\n\\n\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/sass-loader/dist/cjs.js):\\\\nUndefined operation \\\\\\\"(.container__details,) > (.container__details,)\\\\\\\".\\\\n   \\u2577\\\\n17 \\u2502         & > &__text {\\\\n   \\u2502         ^^^^^\\\\n   \\u2575\\\\n  src/app/components/loading/loading.component.scss 17:9  root stylesheet\\\");\\n\\n\\n })\\n\\n\\n \\t});\\n\\n\\n\\n \\t\\n\\n \\t// startup\\n\\n \\t// Load entry module and return exports\\n\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n\\n \\tvar __webpack_exports__ = {};\\n\\n \\t__webpack_modules__[375]();\\n\\n \\tresource = __webpack_exports__;\\n\\n \\t\\n\\n })()\\n;\"]\n    });\n  }\n}","map":{"version":3,"names":["Subject","takeUntil","i0","ɵɵelementContainerStart","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵelementContainerEnd","ɵɵadvance","ɵɵproperty","ctx_r0","loadingImage","ɵɵsanitizeUrl","LoadingComponent","constructor","_loadingService","_destroy$","ngOnInit","onLoading","isLoading","pipe","subscribe","value","ngOnDestroy","next","complete","ɵɵdirectiveInject","i1","LoadingService","selectors","decls","vars","consts","template","LoadingComponent_Template","rf","ctx","ɵɵtemplate","LoadingComponent_ng_container_0_Template"],"sources":["/Users/hazemalaa/Desktop/Food-Store-using-Angular-NodeJs-and-MongoDB/frontend/src/app/components/loading/loading.component.ts","/Users/hazemalaa/Desktop/Food-Store-using-Angular-NodeJs-and-MongoDB/frontend/src/app/components/loading/loading.component.html"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subject, takeUntil } from 'rxjs';\nimport { LoadingService } from 'src/app/services/loading.service';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.scss']\n})\nexport class LoadingComponent implements OnInit, OnDestroy {\n  private _destroy$ = new Subject<void>();\n  loadingImage: string = '/assets/images/loading.svg';\n  isLoading!: boolean;\n\n  constructor(private _loadingService: LoadingService){}\n\n  ngOnInit(): void {\n      this.onLoading();\n  }\n\n  onLoading(): void {\n    this._loadingService.isLoading\n    .pipe(takeUntil(this._destroy$))\n    .subscribe((value: boolean) => {\n      this.isLoading = true;\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n}\n","<ng-container *ngIf=\"isLoading\">\n    <div class=\"container\">\n        <div class=\"container__details\">\n            <img [src]=\"loadingImage\" alt=\"loading circle\" />\n            <h1 class=\"container__details__text\">Loading...</h1>\n        </div>\n    </div>\n</ng-container>"],"mappings":"AACA,SAASA,OAAO,EAAEC,SAAS,QAAQ,MAAM;;;;;;ICDzCC,EAAA,CAAAC,uBAAA,GAAgC;IAC5BD,EAAA,CAAAE,cAAA,aAAuB;IAEfF,EAAA,CAAAG,SAAA,aAAiD;IACjDH,EAAA,CAAAE,cAAA,YAAqC;IAAAF,EAAA,CAAAI,MAAA,iBAAU;IAAAJ,EAAA,CAAAK,YAAA,EAAK;IAGhEL,EAAA,CAAAM,qBAAA,EAAe;;;;IAJEN,EAAA,CAAAO,SAAA,GAAoB;IAApBP,EAAA,CAAAQ,UAAA,QAAAC,MAAA,CAAAC,YAAA,EAAAV,EAAA,CAAAW,aAAA,CAAoB;;;ADMrC,OAAM,MAAOC,gBAAgB;EAK3BC,YAAoBC,eAA+B;IAA/B,KAAAA,eAAe,GAAfA,eAAe;IAJ3B,KAAAC,SAAS,GAAG,IAAIjB,OAAO,EAAQ;IACvC,KAAAY,YAAY,GAAW,4BAA4B;EAGE;EAErDM,QAAQA,CAAA;IACJ,IAAI,CAACC,SAAS,EAAE;EACpB;EAEAA,SAASA,CAAA;IACP,IAAI,CAACH,eAAe,CAACI,SAAS,CAC7BC,IAAI,CAACpB,SAAS,CAAC,IAAI,CAACgB,SAAS,CAAC,CAAC,CAC/BK,SAAS,CAAEC,KAAc,IAAI;MAC5B,IAAI,CAACH,SAAS,GAAG,IAAI;IACvB,CAAC,CAAC;EACJ;EAEAI,WAAWA,CAAA;IACT,IAAI,CAACP,SAAS,CAACQ,IAAI,EAAE;IACrB,IAAI,CAACR,SAAS,CAACS,QAAQ,EAAE;EAC3B;;;uBAtBWZ,gBAAgB,EAAAZ,EAAA,CAAAyB,iBAAA,CAAAC,EAAA,CAAAC,cAAA;IAAA;EAAA;;;YAAhBf,gBAAgB;MAAAgB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCT7BlC,EAAA,CAAAoC,UAAA,IAAAC,wCAAA,0BAOe;;;UAPArC,EAAA,CAAAQ,UAAA,SAAA2B,GAAA,CAAAjB,SAAA,CAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}