{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let ThemeToggleComponent = /*#__PURE__*/(() => {\n  class ThemeToggleComponent {\n    constructor() {\n      this.moonIcon = '../../../assets/images/moon-svgrepo-com.svg';\n      this.sunIcon = '../../../assets/images/sun-svgrepo-com.svg';\n    }\n    ngOnInit() {\n      this.getTheme();\n    }\n    toggleTheme(event) {\n      const isChecked = event.target.checked;\n      if (isChecked) {\n        document.body.classList.add('dark-mode');\n        localStorage.setItem('theme', 'dark');\n      } else {\n        document.body.classList.remove('dark-mode');\n        localStorage.setItem('theme', 'light');\n      }\n    }\n    getTheme() {\n      const theme = localStorage.getItem('theme');\n      if (theme === 'dark') {\n        document.body.classList.add('dark-mode');\n        const toggle = document.getElementById('darkmode-toggle');\n        toggle.checked = true;\n      }\n    }\n    static {\n      this.ɵfac = function ThemeToggleComponent_Factory(t) {\n        return new (t || ThemeToggleComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: ThemeToggleComponent,\n        selectors: [[\"theme-toggle\"]],\n        decls: 7,\n        vars: 2,\n        consts: [[1, \"container\"], [\"type\", \"checkbox\", \"id\", \"darkmode-toggle\", 3, \"change\"], [\"for\", \"darkmode-toggle\"], [\"alt\", \"moon icon\", 1, \"sun\", 3, \"src\"], [\"alt\", \"moon icon\", 1, \"moon\", 3, \"src\"]],\n        template: function ThemeToggleComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"input\", 1);\n            i0.ɵɵlistener(\"change\", function ThemeToggleComponent_Template_input_change_1_listener($event) {\n              return ctx.toggleTheme($event);\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(2, \"label\", 2)(3, \"div\");\n            i0.ɵɵelement(4, \"img\", 3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"div\");\n            i0.ɵɵelement(6, \"img\", 4);\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"src\", ctx.sunIcon, i0.ɵɵsanitizeUrl);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"src\", ctx.moonIcon, i0.ɵɵsanitizeUrl);\n          }\n        },\n        styles: [\".container[_ngcontent-%COMP%]{height:100%;display:flex;justify-content:center;align-items:center;margin-right:1rem}body[_ngcontent-%COMP%]{margin:0;width:100vw;height:100vh;display:flex;flex-direction:column;align-items:center;justify-content:center}label[_ngcontent-%COMP%]{width:40px;height:25px;position:relative;display:block;background-color:#ebebeb;border-radius:200px;box-shadow:inset 0 5px 15px #0006,inset 0 -5px 15px #fff6;cursor:pointer;transition:.3s}label[_ngcontent-%COMP%]:after{content:\\\"\\\";width:20px;height:21px;position:absolute;top:2px;left:1px;background:linear-gradient(180deg,#ffcc89,#e72929);border-radius:180px;box-shadow:0 5px 10px #0003;transition:.3s}label[_ngcontent-%COMP%]:active:after{width:25px}input[_ngcontent-%COMP%]{width:0;height:0;visibility:hidden}input[_ngcontent-%COMP%]:checked + label[_ngcontent-%COMP%]{background:#242424}input[_ngcontent-%COMP%]:checked + label[_ngcontent-%COMP%]:after{left:39px;transform:translate(-100%);background:linear-gradient(180deg,#777,#3a3a3a)}label[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{position:absolute;width:11px;transition:.3s;z-index:100}label[_ngcontent-%COMP%]   .sun[_ngcontent-%COMP%]{top:7px;left:5px;opacity:1}label[_ngcontent-%COMP%]   .moon[_ngcontent-%COMP%]{top:6px;left:25px;opacity:0}input[_ngcontent-%COMP%]:checked + label[_ngcontent-%COMP%]   .sun[_ngcontent-%COMP%]{opacity:0}input[_ngcontent-%COMP%]:checked + label[_ngcontent-%COMP%]   .moon[_ngcontent-%COMP%]{opacity:1;filter:brightness(0) invert(1)}\"]\n      });\n    }\n  }\n  return ThemeToggleComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}