{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { Order } from 'src/app/shared/models/Order';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/cart.service\";\nimport * as i2 from \"src/app/services/user.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../../components/title/title.component\";\nimport * as i5 from \"../../components/text-input/text-input.component\";\nimport * as i6 from \"../../components/order-items-list/order-items-list.component\";\nexport class CheckoutPageComponent {\n  get fc() {\n    return this.checkoutForm.controls;\n  }\n  constructor(_cartService, _userService, _fb) {\n    this._cartService = _cartService;\n    this._userService = _userService;\n    this._fb = _fb;\n    this.order = new Order();\n    this.getCart();\n  }\n  ngOnInit() {\n    this.initForm();\n  }\n  initForm() {\n    let {\n      name,\n      address\n    } = this._userService.currentUser;\n    this.checkoutForm = this._fb.group({\n      name: [name, Validators.required],\n      address: [address, Validators.required]\n    });\n  }\n  createOrder() {\n    if (this.checkoutForm?.invalid) {\n      console.log('form is invalid');\n      return;\n    }\n    this.order.name = this.fc.name.value;\n    this.order.address = this.fc.address.value;\n    console.log(this.order);\n  }\n  getCart() {\n    const cart = this._cartService.getCart();\n    this.order.items = cart.items;\n    this.order.totalPrice = cart.totalPrice;\n  }\n  static {\n    this.ɵfac = function CheckoutPageComponent_Factory(t) {\n      return new (t || CheckoutPageComponent)(i0.ɵɵdirectiveInject(i1.CartService), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CheckoutPageComponent,\n      selectors: [[\"app-checkout-page\"]],\n      decls: 13,\n      vars: 4,\n      consts: [[1, \"container\"], [1, \"content\"], [\"title\", \"Order Form\"], [3, \"formGroup\"], [\"label\", \"Name\", 3, \"control\"], [\"label\", \"Address\", 3, \"control\"], [3, \"order\"], [1, \"map\"], [\"title\", \"Choose your address on Map\"], [1, \"buttons-container\"], [1, \"buttons\"], [3, \"click\"]],\n      template: function CheckoutPageComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n          i0.ɵɵelement(2, \"app-title\", 2);\n          i0.ɵɵelementStart(3, \"form\", 3);\n          i0.ɵɵelement(4, \"text-input\", 4)(5, \"text-input\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(6, \"order-items-list\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"div\", 7);\n          i0.ɵɵelement(8, \"app-title\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"div\", 9)(10, \"div\", 10)(11, \"button\", 11);\n          i0.ɵɵlistener(\"click\", function CheckoutPageComponent_Template_button_click_11_listener() {\n            return ctx.createOrder();\n          });\n          i0.ɵɵtext(12, \"Go To Payment\");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.checkoutForm);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"control\", ctx.fc.name);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"control\", ctx.fc.address);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"order\", ctx.order);\n        }\n      },\n      dependencies: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i4.TitleComponent, i5.TextInputComponent, i6.OrderItemsListComponent],\n      styles: [\".container[_ngcontent-%COMP%] {\\n  margin-top: 1rem;\\n  display: flex;\\n  flex-wrap: wrap;\\n  margin: 0 2rem 6rem 2rem;\\n  justify-content: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvY2hlY2tvdXQtcGFnZS9jaGVja291dC1wYWdlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZ0JBQUE7RUFDQSxhQUFBO0VBQ0EsZUFBQTtFQUNBLHdCQUFBO0VBQ0EsdUJBQUE7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xuICAgIG1hcmdpbi10b3A6IDFyZW07XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgbWFyZ2luOiAwIDJyZW0gNnJlbSAycmVtO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4uY29udGVudCB7XG4gICAgXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","Order","CheckoutPageComponent","fc","checkoutForm","controls","constructor","_cartService","_userService","_fb","order","getCart","ngOnInit","initForm","name","address","currentUser","group","required","createOrder","invalid","console","log","value","cart","items","totalPrice","i0","ɵɵdirectiveInject","i1","CartService","i2","UserService","i3","FormBuilder","selectors","decls","vars","consts","template","CheckoutPageComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵlistener","CheckoutPageComponent_Template_button_click_11_listener","ɵɵtext","ɵɵadvance","ɵɵproperty"],"sources":["/Users/hazemalaa/Desktop/Food-Store-using-Angular-NodeJs-and-MongoDB/frontend/src/app/pages/checkout-page/checkout-page.component.ts","/Users/hazemalaa/Desktop/Food-Store-using-Angular-NodeJs-and-MongoDB/frontend/src/app/pages/checkout-page/checkout-page.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CartService } from 'src/app/services/cart.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { Order } from 'src/app/shared/models/Order';\n\n@Component({\n  selector: 'app-checkout-page',\n  templateUrl: './checkout-page.component.html',\n  styleUrls: ['./checkout-page.component.scss']\n})\nexport class CheckoutPageComponent implements OnInit {\n  order: Order = new Order();\n  checkoutForm!: FormGroup;\n\n  get fc() {\n    return this.checkoutForm.controls;\n  }\n\n  constructor(\n    private _cartService: CartService,\n    private _userService: UserService,\n    private _fb: FormBuilder,\n  ) {\n    this.getCart();\n  }\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  initForm(): void {\n    let { name, address } = this._userService.currentUser;\n\n    this.checkoutForm = this._fb.group({\n      name: [name, Validators.required],\n      address: [address, Validators.required]\n    });\n  }\n\n  createOrder(): void {\n    if(this.checkoutForm?.invalid) {\n      console.log('form is invalid');\n      return;\n    }\n    \n    this.order.name = this.fc.name.value;\n    this.order.address = this.fc.address.value;\n\n    console.log(this.order);\n  }\n\n  \n  getCart(): void {\n    const cart = this._cartService.getCart();\n    this.order.items = cart.items;\n    this.order.totalPrice = cart.totalPrice;\n  }\n}\n","<div class=\"container\">\n    <div class=\"content\">\n        <app-title title=\"Order Form\"></app-title>\n\n        <form [formGroup]=\"checkoutForm\">\n            <text-input [control]=\"fc.name\" label=\"Name\"></text-input>\n            <text-input [control]=\"fc.address\" label=\"Address\"></text-input>\n        </form>\n\n        <order-items-list\n            [order]=\"order\"\n        ></order-items-list>\n    </div>\n    <div class=\"map\">\n        <app-title title=\"Choose your address on Map\"></app-title>\n    </div>\n    <div class=\"buttons-container\">\n        <div class=\"buttons\">\n            <button (click)=\"createOrder()\">Go To Payment</button>\n        </div>\n    </div>\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}