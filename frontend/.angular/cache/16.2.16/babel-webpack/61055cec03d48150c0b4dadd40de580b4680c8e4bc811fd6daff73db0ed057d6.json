{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class LoadingInterceptor {\n  constructor() {}\n  intercept(request, next) {\n    alert('i am interceptor');\n    return next.handle(request);\n  }\n  static {\n    this.ɵfac = function LoadingInterceptor_Factory(t) {\n      return new (t || LoadingInterceptor)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: LoadingInterceptor,\n      factory: LoadingInterceptor.ɵfac\n    });\n  }\n}","map":{"version":3,"names":["LoadingInterceptor","constructor","intercept","request","next","alert","handle","factory","ɵfac"],"sources":["/Users/hazemalaa/Desktop/Food-Store-using-Angular-NodeJs-and-MongoDB/frontend/src/app/shared/interceptors/loading.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n\n  constructor() {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    alert('i am interceptor')\n    return next.handle(request);\n  }\n}\n"],"mappings":";AAUA,OAAM,MAAOA,kBAAkB;EAE7BC,YAAA,GAAe;EAEfC,SAASA,CAACC,OAA6B,EAAEC,IAAiB;IACxDC,KAAK,CAAC,kBAAkB,CAAC;IACzB,OAAOD,IAAI,CAACE,MAAM,CAACH,OAAO,CAAC;EAC7B;;;uBAPWH,kBAAkB;IAAA;EAAA;;;aAAlBA,kBAAkB;MAAAO,OAAA,EAAlBP,kBAAkB,CAAAQ;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}