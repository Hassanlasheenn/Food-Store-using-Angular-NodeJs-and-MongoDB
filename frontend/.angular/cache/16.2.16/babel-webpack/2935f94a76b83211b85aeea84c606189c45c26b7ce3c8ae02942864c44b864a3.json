{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/order.service\";\nimport * as i2 from \"src/app/services/cart.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ngx-toastr\";\nconst _c0 = [\"paypal\"];\nexport class PaypalButtonComponent {\n  constructor(_orderService, _cartService, _router, _toastrService) {\n    this._orderService = _orderService;\n    this._cartService = _cartService;\n    this._router = _router;\n    this._toastrService = _toastrService;\n    this._destroy$ = new Subject();\n  }\n  ngOnInit() {\n    this.onPaypalPay();\n  }\n  onPaypalPay() {\n    const self = this;\n    paypal.Buttons({\n      style: {\n        layout: 'horizontal',\n        color: 'blue',\n        shape: 'rect',\n        label: 'paypal'\n      },\n      createOrder: (data, actions) => {\n        return actions.order.create({\n          purchase_units: [{\n            amount: {\n              currency_code: 'USD',\n              value: self.order.totalPrice\n            }\n          }]\n        });\n      },\n      onApprove: (data, actions) => {\n        return actions.order.capture().then(details => {\n          console.log(details);\n        });\n        // const payment = actions.order.capture();\n        // this.order.paymentId = payment.id;\n        // self._orderService.pay(this.order)\n        // .subscribe(\n        //   {\n        //     next: (orderId) => {\n        //       this._cartService.clearCart();\n        //       this._router.navigateByUrl('/track/' + orderId);\n        //       this._toastrService.success(\n        //         'Payment done successfully',\n        //         'Success'\n        //       );\n        //     },\n        //     error: (err: Error) => {\n        //       this._toastrService.error('Payment Failed', 'Error');\n        //     }\n        //   }\n        // );\n      },\n\n      onError: err => {\n        // this._toastrService.error('Payment Failed', 'Error');\n        console.log(err);\n      }\n    }).render(this.paypalElement.nativeElement);\n  }\n  ngOnDestroy() {\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n  static {\n    this.ɵfac = function PaypalButtonComponent_Factory(t) {\n      return new (t || PaypalButtonComponent)(i0.ɵɵdirectiveInject(i1.OrderService), i0.ɵɵdirectiveInject(i2.CartService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.ToastrService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PaypalButtonComponent,\n      selectors: [[\"paypal-button\"]],\n      viewQuery: function PaypalButtonComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paypalElement = _t.first);\n        }\n      },\n      inputs: {\n        order: \"order\"\n      },\n      decls: 2,\n      vars: 0,\n      consts: [[\"paypal\", \"\"]],\n      template: function PaypalButtonComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"div\", null, 0);\n        }\n      },\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Subject","PaypalButtonComponent","constructor","_orderService","_cartService","_router","_toastrService","_destroy$","ngOnInit","onPaypalPay","self","paypal","Buttons","style","layout","color","shape","label","createOrder","data","actions","order","create","purchase_units","amount","currency_code","value","totalPrice","onApprove","capture","then","details","console","log","onError","err","render","paypalElement","nativeElement","ngOnDestroy","next","complete","i0","ɵɵdirectiveInject","i1","OrderService","i2","CartService","i3","Router","i4","ToastrService","selectors","viewQuery","PaypalButtonComponent_Query","rf","ctx","ɵɵelement"],"sources":["/Users/hazemalaa/Desktop/Food-Store-using-Angular-NodeJs-and-MongoDB/frontend/src/app/components/paypal-button/paypal-button.component.ts","/Users/hazemalaa/Desktop/Food-Store-using-Angular-NodeJs-and-MongoDB/frontend/src/app/components/paypal-button/paypal-button.component.html"],"sourcesContent":["import { Component, ElementRef, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Subject } from 'rxjs';\nimport { CartService } from 'src/app/services/cart.service';\nimport { OrderService } from 'src/app/services/order.service';\nimport { Order } from 'src/app/shared/models/Order';\n\ndeclare var paypal: any;\n\n@Component({\n  selector: 'paypal-button',\n  templateUrl: './paypal-button.component.html',\n  styleUrls: ['./paypal-button.component.scss']\n})\nexport class PaypalButtonComponent implements OnInit, OnDestroy {\n  private _destroy$ = new Subject<void>();\n  @Input() order!: Order;\n  @ViewChild('paypal', {static: true}) paypalElement!: ElementRef;\n\n  constructor(\n    private _orderService: OrderService,\n    private _cartService: CartService,\n    private _router: Router,\n    private _toastrService: ToastrService,\n  ) {}\n\n  ngOnInit(): void {\n    this.onPaypalPay();\n  }\n\n  onPaypalPay(): void {\n    const self = this;\n    paypal\n    .Buttons({\n      style: {\n        layout: 'horizontal',\n        color: 'blue',\n        shape: 'rect',\n        label: 'paypal'\n      },\n      createOrder: (data: any, actions: any) => {\n        return actions.order.create({\n          purchase_units: [\n            {\n              amount: {\n                currency_code: 'USD',\n                value: self.order.totalPrice,\n              }\n            }\n          ],\n        });\n      },\n\n      onApprove: (data: any, actions: any) => {\n        return actions.order.capture().then((details: any) => {\n          console.log(details);\n        })\n        // const payment = actions.order.capture();\n        // this.order.paymentId = payment.id;\n        // self._orderService.pay(this.order)\n        // .subscribe(\n        //   {\n        //     next: (orderId) => {\n        //       this._cartService.clearCart();\n        //       this._router.navigateByUrl('/track/' + orderId);\n        //       this._toastrService.success(\n        //         'Payment done successfully',\n        //         'Success'\n        //       );\n        //     },\n        //     error: (err: Error) => {\n        //       this._toastrService.error('Payment Failed', 'Error');\n        //     }\n        //   }\n        // );\n      },\n      onError: (err: any) => {\n        // this._toastrService.error('Payment Failed', 'Error');\n        console.log(err);\n      },\n    })\n    .render(this.paypalElement.nativeElement);\n  }\n\n  ngOnDestroy(): void {\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n}\n","<div #paypal></div>"],"mappings":"AAGA,SAASA,OAAO,QAAQ,MAAM;;;;;;;AAY9B,OAAM,MAAOC,qBAAqB;EAKhCC,YACUC,aAA2B,EAC3BC,YAAyB,EACzBC,OAAe,EACfC,cAA6B;IAH7B,KAAAH,aAAa,GAAbA,aAAa;IACb,KAAAC,YAAY,GAAZA,YAAY;IACZ,KAAAC,OAAO,GAAPA,OAAO;IACP,KAAAC,cAAc,GAAdA,cAAc;IARhB,KAAAC,SAAS,GAAG,IAAIP,OAAO,EAAQ;EASpC;EAEHQ,QAAQA,CAAA;IACN,IAAI,CAACC,WAAW,EAAE;EACpB;EAEAA,WAAWA,CAAA;IACT,MAAMC,IAAI,GAAG,IAAI;IACjBC,MAAM,CACLC,OAAO,CAAC;MACPC,KAAK,EAAE;QACLC,MAAM,EAAE,YAAY;QACpBC,KAAK,EAAE,MAAM;QACbC,KAAK,EAAE,MAAM;QACbC,KAAK,EAAE;OACR;MACDC,WAAW,EAAEA,CAACC,IAAS,EAAEC,OAAY,KAAI;QACvC,OAAOA,OAAO,CAACC,KAAK,CAACC,MAAM,CAAC;UAC1BC,cAAc,EAAE,CACd;YACEC,MAAM,EAAE;cACNC,aAAa,EAAE,KAAK;cACpBC,KAAK,EAAEhB,IAAI,CAACW,KAAK,CAACM;;WAErB;SAEJ,CAAC;MACJ,CAAC;MAEDC,SAAS,EAAEA,CAACT,IAAS,EAAEC,OAAY,KAAI;QACrC,OAAOA,OAAO,CAACC,KAAK,CAACQ,OAAO,EAAE,CAACC,IAAI,CAAEC,OAAY,IAAI;UACnDC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;QACtB,CAAC,CAAC;QACF;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACF,CAAC;;MACDG,OAAO,EAAGC,GAAQ,IAAI;QACpB;QACAH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;MAClB;KACD,CAAC,CACDC,MAAM,CAAC,IAAI,CAACC,aAAa,CAACC,aAAa,CAAC;EAC3C;EAEAC,WAAWA,CAAA;IACT,IAAI,CAAChC,SAAS,CAACiC,IAAI,EAAE;IACrB,IAAI,CAACjC,SAAS,CAACkC,QAAQ,EAAE;EAC3B;;;uBAzEWxC,qBAAqB,EAAAyC,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,YAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,MAAA,GAAAP,EAAA,CAAAC,iBAAA,CAAAO,EAAA,CAAAC,aAAA;IAAA;EAAA;;;YAArBlD,qBAAqB;MAAAmD,SAAA;MAAAC,SAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;;;;;;;;;;;;;;;;UCflCb,EAAA,CAAAe,SAAA,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}