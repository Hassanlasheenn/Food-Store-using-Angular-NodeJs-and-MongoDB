{"ast":null,"code":"import { HttpEventType } from '@angular/common/http';\nimport { tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/loading.service\";\nexport let LoadingInterceptor = /*#__PURE__*/(() => {\n  class LoadingInterceptor {\n    constructor(_loadingService) {\n      this._loadingService = _loadingService;\n    }\n    intercept(request, next) {\n      this._loadingService.showLoading();\n      return next.handle(request).pipe(tap({\n        next: event => {\n          if (event.type === HttpEventType.Response) {\n            this._loadingService.hideLoading();\n          }\n        },\n        error: _ => {\n          this._loadingService.hideLoading();\n        }\n      }));\n    }\n    static {\n      this.ɵfac = function LoadingInterceptor_Factory(t) {\n        return new (t || LoadingInterceptor)(i0.ɵɵinject(i1.LoadingService));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: LoadingInterceptor,\n        factory: LoadingInterceptor.ɵfac\n      });\n    }\n  }\n  return LoadingInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}