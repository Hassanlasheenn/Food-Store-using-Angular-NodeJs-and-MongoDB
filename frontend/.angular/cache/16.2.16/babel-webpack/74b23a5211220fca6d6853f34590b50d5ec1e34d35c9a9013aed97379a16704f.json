{"ast":null,"code":"import { take } from 'rxjs';\nimport { FOODS_BY_SEARCH_URL, FOODS_BY_TAG_URL, FOODS_TAGS_URL, FOODS_URL } from '../shared/constants/api-urls';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FoodService {\n  constructor(_http) {\n    this._http = _http;\n  }\n  getAll() {\n    return this._http.get(FOODS_URL).pipe(take(1));\n  }\n  getAllFoodBySearch(searchTerm) {\n    return this._http.get(`${FOODS_BY_SEARCH_URL}/${searchTerm}`).pipe(take(1));\n  }\n  getFoodById(foodId) {\n    return this._http.get(`${FOODS_URL}/${foodId}`).pipe(take(1));\n  }\n  getAllTags() {\n    return this._http.get(FOODS_TAGS_URL).pipe(take(1));\n  }\n  getAllFoodByTag(tag) {\n    return tag === 'All' ? this.getAll() : this._http.get(`${FOODS_BY_TAG_URL}/${tag}`).pipe(take(1));\n  }\n  static {\n    this.ɵfac = function FoodService_Factory(t) {\n      return new (t || FoodService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: FoodService,\n      factory: FoodService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["take","FOODS_BY_SEARCH_URL","FOODS_BY_TAG_URL","FOODS_TAGS_URL","FOODS_URL","FoodService","constructor","_http","getAll","get","pipe","getAllFoodBySearch","searchTerm","getFoodById","foodId","getAllTags","getAllFoodByTag","tag","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/hazemalaa/Desktop/Food-Store-using-Angular-NodeJs-and-MongoDB/frontend/src/app/services/food.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Food } from '../shared/models/food';\nimport { Tag } from '../shared/models/tags';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, take } from 'rxjs';\nimport { \n  FOODS_BY_SEARCH_URL, \n  FOODS_BY_TAG_URL, \n  FOODS_TAGS_URL, \n  FOODS_URL \n} from '../shared/constants/api-urls';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FoodService {\n\n  constructor(\n    private _http: HttpClient,\n  ) {}\n\n  getAll(): Observable<Food[]> {\n    return this._http\n    .get<Food[]>(FOODS_URL)\n    .pipe(take(1));\n  }\n\n  getAllFoodBySearch(searchTerm: string): Observable<Food[]> {\n    return this._http.get<Food[]>(`${FOODS_BY_SEARCH_URL}/${searchTerm}`).pipe(take(1));\n  }\n\n  getFoodById(foodId: number): Observable<Food> {\n    return this._http.get<Food>(`${FOODS_URL}/${foodId}`).pipe(take(1));\n  }\n\n  getAllTags(): Observable<Tag[]> {\n    return this._http\n    .get<Tag[]>(FOODS_TAGS_URL)\n    .pipe(take(1));\n  }\n\n  getAllFoodByTag(tag: string): Observable<Food[]> {\n    return tag === 'All' ?\n    this.getAll() :\n    this._http.get<Food[]>(`${FOODS_BY_TAG_URL}/${tag}`)\n    .pipe(take(1));\n  }\n}"],"mappings":"AAIA,SAAqBA,IAAI,QAAQ,MAAM;AACvC,SACEC,mBAAmB,EACnBC,gBAAgB,EAChBC,cAAc,EACdC,SAAS,QACJ,8BAA8B;;;AAKrC,OAAM,MAAOC,WAAW;EAEtBC,YACUC,KAAiB;IAAjB,KAAAA,KAAK,GAALA,KAAK;EACZ;EAEHC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACD,KAAK,CAChBE,GAAG,CAASL,SAAS,CAAC,CACtBM,IAAI,CAACV,IAAI,CAAC,CAAC,CAAC,CAAC;EAChB;EAEAW,kBAAkBA,CAACC,UAAkB;IACnC,OAAO,IAAI,CAACL,KAAK,CAACE,GAAG,CAAS,GAAGR,mBAAmB,IAAIW,UAAU,EAAE,CAAC,CAACF,IAAI,CAACV,IAAI,CAAC,CAAC,CAAC,CAAC;EACrF;EAEAa,WAAWA,CAACC,MAAc;IACxB,OAAO,IAAI,CAACP,KAAK,CAACE,GAAG,CAAO,GAAGL,SAAS,IAAIU,MAAM,EAAE,CAAC,CAACJ,IAAI,CAACV,IAAI,CAAC,CAAC,CAAC,CAAC;EACrE;EAEAe,UAAUA,CAAA;IACR,OAAO,IAAI,CAACR,KAAK,CAChBE,GAAG,CAAQN,cAAc,CAAC,CAC1BO,IAAI,CAACV,IAAI,CAAC,CAAC,CAAC,CAAC;EAChB;EAEAgB,eAAeA,CAACC,GAAW;IACzB,OAAOA,GAAG,KAAK,KAAK,GACpB,IAAI,CAACT,MAAM,EAAE,GACb,IAAI,CAACD,KAAK,CAACE,GAAG,CAAS,GAAGP,gBAAgB,IAAIe,GAAG,EAAE,CAAC,CACnDP,IAAI,CAACV,IAAI,CAAC,CAAC,CAAC,CAAC;EAChB;;;uBA/BWK,WAAW,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXhB,WAAW;MAAAiB,OAAA,EAAXjB,WAAW,CAAAkB,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}