{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let LoadingService = /*#__PURE__*/(() => {\n  class LoadingService {\n    get isLoading() {\n      return this.isLoadingSubject.asObservable();\n    }\n    constructor() {\n      this.isLoadingSubject = new BehaviorSubject(false);\n      this.pendingRequests = 0;\n    }\n    /**\n     * @description method to show the loading spinner when pending requets property is more than 0\n     * @returns {void} void\n     */\n    showLoading() {\n      this.pendingRequests++;\n      this.isLoadingSubject.next(this.pendingRequests > 0);\n    }\n    /**\n     * @description method to not show the loading spinner by checking on the pending requests less than 0\n     * @return {void} void\n     */\n    hideLoading() {\n      if (this.pendingRequests > 0) {\n        this.pendingRequests--;\n      }\n      this.isLoadingSubject.next(this.pendingRequests > 0);\n    }\n    static {\n      this.ɵfac = function LoadingService_Factory(t) {\n        return new (t || LoadingService)();\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: LoadingService,\n        factory: LoadingService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return LoadingService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}